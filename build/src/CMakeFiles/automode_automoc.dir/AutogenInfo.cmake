set(AM_SOURCES "/home/vagrant/AutoMoDe/src/core/AutoMoDeController.cpp;/home/vagrant/AutoMoDe/src/core/AutoMoDeFiniteStateMachine.cpp;/home/vagrant/AutoMoDe/src/core/AutoMoDeFsmBuilder.cpp;/home/vagrant/AutoMoDe/src/core/AutoMoDeFsmHistory.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviour.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourAntiPhototaxis.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourPhototaxis.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourAttraction.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourRepulsion.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourStop.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourExploration.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeCondition.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionBlackFloor.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionWhiteFloor.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionGrayFloor.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionNeighborsCount.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionInvertedNeighborsCount.cpp;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionFixedProbability.cpp" )
set(AM_RCC_SOURCES  )
set(AM_RCC_INPUTS )
set(AM_SKIP_MOC "" )
set(AM_SKIP_UIC  )
set(AM_HEADERS "/home/vagrant/AutoMoDe/src/core/AutoMoDeController.h;/home/vagrant/AutoMoDe/src/core/AutoMoDeFiniteStateMachine.h;/home/vagrant/AutoMoDe/src/core/AutoMoDeFsmBuilder.h;/home/vagrant/AutoMoDe/src/core/AutoMoDeFsmHistory.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviour.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourAntiPhototaxis.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourPhototaxis.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourAttraction.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourRepulsion.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourStop.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeBehaviourExploration.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeCondition.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionBlackFloor.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionWhiteFloor.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionGrayFloor.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionNeighborsCount.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionInvertedNeighborsCount.h;/home/vagrant/AutoMoDe/src/modules/AutoMoDeConditionFixedProbability.h" )
set(AM_MOC_COMPILE_DEFINITIONS "ARGOS_simulator_BUILD;QT_CORE_LIB;QT_GUI_LIB;QT_WIDGETS_LIB")
set(AM_MOC_INCLUDES "/home/vagrant/AutoMoDe/build/src;/home/vagrant/AutoMoDe/src;/home/vagrant/argos3-dist/include;/usr/include/lua5.2;/usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtWidgets;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++;/home/vagrant/AutoMoDe")
set(AM_MOC_OPTIONS "")
set(AM_CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE "")
set(AM_CMAKE_BINARY_DIR "/home/vagrant/AutoMoDe/build/")
set(AM_CMAKE_SOURCE_DIR "/home/vagrant/AutoMoDe/")
set(AM_QT_MOC_EXECUTABLE "/usr/lib/qt5/bin/moc")
set(AM_QT_UIC_EXECUTABLE "")
set(AM_QT_RCC_EXECUTABLE "")
set(AM_CMAKE_CURRENT_SOURCE_DIR "/home/vagrant/AutoMoDe/src/")
set(AM_CMAKE_CURRENT_BINARY_DIR "/home/vagrant/AutoMoDe/build/src/")
set(AM_QT_VERSION_MAJOR "5")
set(AM_TARGET_NAME "automode_automoc")
set(AM_ORIGIN_TARGET_NAME "automode")
set(AM_RELAXED_MODE "FALSE")
set(AM_UIC_TARGET_OPTIONS )
set(AM_UIC_OPTIONS_FILES )
set(AM_UIC_OPTIONS_OPTIONS )
set(AM_RCC_OPTIONS_FILES )
set(AM_RCC_OPTIONS_OPTIONS )
